max_obstacle_height: 2.40  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
#robot_radius: 0.5  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular
footprint: [[0.4, 0.3], [-0.4, 0.3], [-0.4, -0.3] ,[0.4, -0.3]]
map_type: voxel

voxel_layer:
  enabled:              true
  max_obstacle_height:  2.2
  origin_z:             0.0
  z_resolution:         0.1
  z_voxels:             22
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  #/*检测范围内的障碍物*/
  obstacle_range: 0.3
  raytrace_range: 3.0
  publish_voxel_map: true
  observation_sources:  scan #bump
  scan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    min_obstacle_height: 0.15
    max_obstacle_height: 0.20
#  camera:
#    data_type: PointCloud2
#    topic: camera/depth/points
#    marking: true
#    clearing: true
#    min_obstacle_height: 0.0
#    max_obstacle_height: 2.0
  # bump:
  #   data_type: PointCloud2
  #   topic: mobile_base/sensors/bumper_pointcloud
  #   marking: true
  #   clearing: false
  #   min_obstacle_height: 0.0
  #   max_obstacle_height: 0.15
   #for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  10  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     3  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
  
